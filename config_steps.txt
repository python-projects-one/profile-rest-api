#install git, vagrant, docker, Python

#Run git init

# create .gitignore License, README.md files
#- add necessary content to .gitignore file

#create sshkey and post .pub key to github

#add, commit and push current contents to github

#create vagrant file for ubuntu server
vagrant init ubuntu/bionic64
config.vm.box_version= "20201014.0.0"

#edit vagrantfile
#-config.vm.box_version to keep virtualbox consistent
#- config.vm.network "forwarded_port", guest: 8000, host: 8000

config.vm.provision "shell", inline: <<-SHELL
  systemctl disable apt-daily.service
  systemctl disable apt-daily.timer

  sudo apt-get update
  sudo apt-get -y do-release-upgrade
  sudo apt-get -y install python3-venv zip
  touch /home/vagrant/.bash_aliases
  if ! grep -q PYTHON_ALIAS_ADDED /home/vagrant/.bash_aliases; then
    echo "# PYTHON_ALIAS_ADDED" >> /home/vagrant/.bash_aliases
    echo "alias python='python3'" >> /home/vagrant/.bash_aliases
  fi
SHELL

##start vagrant server
vagrant up

#connect using ssh
vagrant ssh

##Vagrant will automatically update the files on the created server
#with updates we make on our local machine (/vagrant)
#cd /vagrant

#create py virtual env in /vagrant
#eg.. python -m venv ~/myenv

#activate environment
source ~/myenv/bin/activate

#create requirements.txt file in local project directory
#add packages to the files
#django=2.2, djangorestframework

#install packages in the requirements.txt files on the
#vagrant server
pip install -r requirements.txt

#Start the project and app
django-admin.py startproject profiles_project .

#create app
python manage.py startapp profiles_api

#enable the app in the project settings
#- go to project_directory -> settings.py
#- Add the app to the INSTALLED_APPS list
##- 'rest_framework',
##'rest_framework.authtoken',
##'profiles_api'

#test changes
python manage.py migrate

python manage.py runserver 0.0.0.0:8000

#stop server
CTRL+C





###Troubleshooting
#Problem: Vagrant cannot forward the specified ports on this VM, since they
would collide with some other application that is already listening
on these ports. The forwarded port to 8000 is already in use
on the host machine.

To fix this, modify your current project's Vagrantfile to use another
port. Example, where '1234' would be replaced by a unique host port:

  config.vm.network :forwarded_port, guest: 8000, host: 1234

Sometimes, Vagrant will attempt to auto-correct this for you. In this
case, Vagrant was unable to. This is usually because the guest machine
is in a state which doesn't allow modifying port forwarding. You could
try 'vagrant reload' (equivalent of running a halt followed by an up)
so vagrant can attempt to auto-correct this upon booting. Be warned
that any unsaved work might be lost.

##Solution:
#sudo kill $(sudo lsof -t -i:8000)
###-OR
#- find the open port:
#- ss -tulwn | grep LISTEN
##Close it
#sudo ufw deny 8000
##reopen it
sudo ufw allow 8000

#Problem: The box you requested to be removed could not be found. No
boxes named 'ubuntu/bionic64' could be found.

#solution: delete .vagrant directory and vagrant log file
